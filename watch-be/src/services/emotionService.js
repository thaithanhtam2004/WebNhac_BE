const { ulid } = require("ulid");
const EmotionRepository = require("../infras/repositories/emotionRepository");

const EmotionService = {
  // üü¢ L·∫•y t·∫•t c·∫£ c·∫£m x√∫c
  async getAllEmotions() {
    return await EmotionRepository.findAll();
  },

  // üü¢ L·∫•y c·∫£m x√∫c theo ID
  async getEmotionById(emotionId) {
    const emotion = await EmotionRepository.findById(emotionId);
    if (!emotion) throw new Error("C·∫£m x√∫c kh√¥ng t·ªìn t·∫°i");
    return emotion;
  },

  // üü¢ T·∫°o c·∫£m x√∫c m·ªõi
  async createEmotion(data) {
    if (!data.name?.trim()) throw new Error("T√™n c·∫£m x√∫c kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");

    // Ki·ªÉm tra tr√πng t√™n
    const existing = await EmotionRepository.findByName(data.name.trim());
    if (existing) throw new Error("T√™n c·∫£m x√∫c ƒë√£ t·ªìn t·∫°i");

    const emotionId = ulid();
    await EmotionRepository.create({
      emotionId,
      name: data.name.trim(),
      description: data.description || null,
    });

    return { message: "T·∫°o c·∫£m x√∫c th√†nh c√¥ng", emotionId };
  },

  // üü¢ C·∫≠p nh·∫≠t c·∫£m x√∫c
  async updateEmotion(emotionId, data) {
    const emotion = await EmotionRepository.findById(emotionId);
    if (!emotion) throw new Error("C·∫£m x√∫c kh√¥ng t·ªìn t·∫°i");

    // N·∫øu c·∫≠p nh·∫≠t t√™n th√¨ ki·ªÉm tra tr√πng
    if (data.name) {
      const existing = await EmotionRepository.findByName(data.name.trim());
      if (existing && existing.emotionId !== emotionId)
        throw new Error("T√™n c·∫£m x√∫c ƒë√£ t·ªìn t·∫°i");
    }

    const success = await EmotionRepository.update(emotionId, data);
    if (!success) throw new Error("C·∫≠p nh·∫≠t c·∫£m x√∫c th·∫•t b·∫°i");

    return { message: "C·∫≠p nh·∫≠t c·∫£m x√∫c th√†nh c√¥ng" };
  },

  // üü¢ X√≥a c·∫£m x√∫c
  async deleteEmotion(emotionId) {
    const emotion = await EmotionRepository.findById(emotionId);
    if (!emotion) throw new Error("C·∫£m x√∫c kh√¥ng t·ªìn t·∫°i");

    const success = await EmotionRepository.delete(emotionId);
    if (!success) throw new Error("X√≥a c·∫£m x√∫c th·∫•t b·∫°i");

    return { message: "ƒê√£ x√≥a c·∫£m x√∫c th√†nh c√¥ng" };
  },
};

module.exports = EmotionService;
