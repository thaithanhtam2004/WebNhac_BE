const AlbumSongService = require("../../services/albumSongService");

class AlbumSongController {
  // üü¢ L·∫•y danh s√°ch b√†i h√°t c·ªßa album
  async getSongsByAlbum(req, res) {
    try {
      const { albumId } = req.params;
      const songs = await AlbumSongService.getSongsByAlbum(albumId);

      res.status(200).json({
        success: true,
        data: songs,
      });
    } catch (err) {
      console.error("‚ùå L·ªói khi l·∫•y b√†i h√°t theo album:", err);
      res.status(404).json({
        success: false,
        message: err.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch b√†i h√°t c·ªßa album",
      });
    }
  }

  // üü¢ Th√™m b√†i h√°t v√†o album
  async addSongToAlbum(req, res) {
    try {
      const { albumId, songId } = req.params;
      const { trackNumber } = req.body;

      if (!albumId || !songId) {
        return res.status(400).json({
          success: false,
          message: "Thi·∫øu albumId ho·∫∑c songId",
        });
      }

      const result = await AlbumSongService.addSongToAlbum(albumId, songId, trackNumber);
      res.status(201).json({
        success: true,
        message: result.message,
      });
    } catch (err) {
      console.error("‚ùå L·ªói th√™m b√†i h√°t v√†o album:", err);
      res.status(400).json({
        success: false,
        message: err.message || "Th√™m b√†i h√°t v√†o album th·∫•t b·∫°i",
      });
    }
  }

  // üü¢ X√≥a b√†i h√°t kh·ªèi album
  async removeSongFromAlbum(req, res) {
    try {
      const { albumId, songId } = req.params;
      const result = await AlbumSongService.removeSongFromAlbum(albumId, songId);

      res.status(200).json({
        success: true,
        message: result.message,
      });
    } catch (err) {
      console.error("‚ùå L·ªói x√≥a b√†i h√°t kh·ªèi album:", err);
      res.status(400).json({
        success: false,
        message: err.message || "X√≥a b√†i h√°t kh·ªèi album th·∫•t b·∫°i",
      });
    }
  }

  // üü¢ C·∫≠p nh·∫≠t danh s√°ch b√†i h√°t c·ªßa album
  async updateAlbumSongs(req, res) {
    try {
      const { albumId } = req.params;
      const { songList } = req.body;

      if (!Array.isArray(songList) || songList.length === 0) {
        return res.status(400).json({
          success: false,
          message: "Danh s√°ch b√†i h√°t kh√¥ng h·ª£p l·ªá",
        });
      }

      const result = await AlbumSongService.updateAlbumSongs(albumId, songList);
      res.status(200).json({
        success: true,
        message: result.message,
      });
    } catch (err) {
      console.error("‚ùå L·ªói c·∫≠p nh·∫≠t danh s√°ch b√†i h√°t c·ªßa album:", err);
      res.status(400).json({
        success: false,
        message: err.message || "C·∫≠p nh·∫≠t danh s√°ch b√†i h√°t th·∫•t b·∫°i",
      });
    }
  }
}

module.exports = new AlbumSongController();
