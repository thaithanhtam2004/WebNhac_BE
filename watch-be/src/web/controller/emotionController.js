const EmotionService = require("../../services/emotionService");

class EmotionController {
  // üü© L·∫•y t·∫•t c·∫£ c·∫£m x√∫c
  async getAll(req, res) {
    try {
      const emotions = await EmotionService.getAllEmotions();
      res.status(200).json({ success: true, data: emotions });
    } catch (err) {
      console.error("‚ùå L·ªói khi l·∫•y danh s√°ch c·∫£m x√∫c:", err);
      res.status(500).json({
        success: false,
        message: "Kh√¥ng th·ªÉ l·∫•y danh s√°ch c·∫£m x√∫c",
        error: err.message,
      });
    }
  }

  // üü© L·∫•y c·∫£m x√∫c theo ID
  async getById(req, res) {
    try {
      const { id } = req.params;
      const emotion = await EmotionService.getEmotionById(id);

      if (!emotion) {
        return res.status(404).json({
          success: false,
          message: "Kh√¥ng t√¨m th·∫•y c·∫£m x√∫c",
        });
      }

      res.status(200).json({ success: true, data: emotion });
    } catch (err) {
      console.error("‚ùå L·ªói khi l·∫•y c·∫£m x√∫c theo ID:", err);
      res.status(500).json({
        success: false,
        message: "Kh√¥ng th·ªÉ l·∫•y th√¥ng tin c·∫£m x√∫c",
        error: err.message,
      });
    }
  }

  // üü© T·∫°o c·∫£m x√∫c m·ªõi
  async create(req, res) {
    try {
      const { name } = req.body;

      if (!name) {
        return res.status(400).json({
          success: false,
          message: "Thi·∫øu t√™n c·∫£m x√∫c",
        });
      }

      const result = await EmotionService.createEmotion(req.body);
      res.status(201).json({
        success: true,
        message: result.message,
        emotionId: result.emotionId,
      });
    } catch (err) {
      console.error("‚ùå L·ªói t·∫°o c·∫£m x√∫c:", err);
      res.status(400).json({
        success: false,
        message: err.message || "T·∫°o c·∫£m x√∫c th·∫•t b·∫°i",
      });
    }
  }

  // üü© C·∫≠p nh·∫≠t c·∫£m x√∫c
  async update(req, res) {
    try {
      const { id } = req.params;
      const result = await EmotionService.updateEmotion(id, req.body);

      if (!result) {
        return res.status(404).json({
          success: false,
          message: "Kh√¥ng t√¨m th·∫•y c·∫£m x√∫c ƒë·ªÉ c·∫≠p nh·∫≠t",
        });
      }

      res.status(200).json({
        success: true,
        message: result.message,
      });
    } catch (err) {
      console.error("‚ùå L·ªói c·∫≠p nh·∫≠t c·∫£m x√∫c:", err);
      res.status(400).json({
        success: false,
        message: err.message || "C·∫≠p nh·∫≠t c·∫£m x√∫c th·∫•t b·∫°i",
      });
    }
  }

  // üü© X√≥a c·∫£m x√∫c
  async delete(req, res) {
    try {
      const { id } = req.params;
      const result = await EmotionService.deleteEmotion(id);

      if (!result) {
        return res.status(404).json({
          success: false,
          message: "Kh√¥ng t√¨m th·∫•y c·∫£m x√∫c ƒë·ªÉ x√≥a",
        });
      }

      res.status(200).json({
        success: true,
        message: "ƒê√£ x√≥a c·∫£m x√∫c th√†nh c√¥ng",
      });
    } catch (err) {
      console.error("‚ùå L·ªói x√≥a c·∫£m x√∫c:", err);
      res.status(500).json({
        success: false,
        message: err.message || "Kh√¥ng th·ªÉ x√≥a c·∫£m x√∫c",
      });
    }
  }
}

module.exports = new EmotionController();
